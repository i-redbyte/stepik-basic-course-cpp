#include <iostream>

/** Напишите рекурсивную функцию вычисления наибольшего общего делителя
 * двух положительных целых чисел (Greatest Common Divisor, GCD).
 * Для этого воспользуйтесь следующими свойствами:
 * 1. GCD(a, b) = GCD(b, a mod b)
 * 2. GCD(0, a) = aGCD(0,a)=a
 * 3. GCD(a, b) = GCD(b, a)
 * Требования к реализации: в данном задании запрещено пользоваться циклами.
 * Вы можете заводить любые вспомогательные функции, если они вам нужны.*/
unsigned gcd(unsigned a, unsigned b) {
    if (b == 0) return a;
    return gcd(b, a % b);
}

/**Вам требуется написать программу, которая "переворачивает" последовательность положительных целых чисел.
 * На вход подается последовательность разделенных пробелами положительных целых чисел.
 * Последовательность заканчивается нулем. Требуется вывести эту последовательность в обратном порядке.
 * На выводе числа нужно так же разделить пробелами.
 * Завершающий ноль — это просто индикатор конца последовательности, он не является ее частью, т.е. выводить его не нужно.
 * Требования к реализации:
 * в данном задании запрещено использовать циклы,
 * а также дополнительную память: массивы, строки или контейнеры (даже, если вы с ними уже знакомы).
 * Вам разрешено заводить вспомогательные функции, если они вам нужны.*/
void reverseNumbers() {
    int n;
    std::cin >> n;
    if (n == 0) return;
    reverseNumbers();
    std::cout << n << " ";
}

int main() {
    std::cout << gcd(8, 16) << std::endl;
    std::cout << gcd(100, 40) << std::endl;
    std::cout << gcd(0, 0) << std::endl;
    reverseNumbers();
    return 0;
}